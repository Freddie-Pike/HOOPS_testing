{"version":3,"sources":["../external \"Communicator\"","assets/aquo_bottle.scs","assets/ts3d_logo.png","components/viewer-component.js","components/model-tree-component.js","App.js","index.js"],"names":["module","exports","Communicator","ViewerComponent","props","viewerId","uuidv4","hwv","WebViewer","containerId","this","endpointUri","modelUri","setCallbacks","sceneReady","view","setBackgroundColor","Color","white","start","window","addEventListener","resizeCanvas","hwvReady","className","id","Component","ModelTreeComponent","updateItemList","bind","rootNodeId","model","getAbsoluteRootNode","itemList","nodeId","setSelect","selectionArray","selectionEvents","key","forEach","selectionEvent","getSelection","getNodeId","treeItemComponent","level","ModelTreeItemComponent","selectClick","collapseClick","childrenId","nodeName","state","isSelected","isCollapsed","getNodeType","NodeType","Part","PartInstance","BodyInstance","AssemblyNode","getNodeName","getNodeChildren","setState","event","selectPart","paddingStyle","paddingLeft","marginBottom","childrenItems","map","childId","caretClass","length","selectionClass","nameDisplayClass","Fragment","style","onClick","App","changeTab","changeOperator","currentTab","cameraStatus","operator","isStructureReady","newHWV","getCamera","toJson","modelStructureReady","camera","target","value","operatorManager","clear","push","OperatorId","Orbit","AreaSelect","Select","MeasurePointPointDistance","newTab","navItem","content","type","cameraStatusContent","position","x","toFixed","y","z","up","width","height","projection","nearLimit","homeTabContent","onChange","modelStructureTabContent","aquo_bottle","src","logo","maxHeight","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HAAAA,EAAOC,QAAUC,c,wJCAF,G,MAAA,IAA0B,yCCA1B,MAA0B,sC,+BCqC1BC,E,kDA7BX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,SAAWC,cAFD,E,qDAKnB,WACI,IAAMC,EAAM,IAAIL,IAAaM,UAAU,CACnCC,YAAaC,KAAKL,SAClBM,YAAaD,KAAKN,MAAMQ,WAE5BL,EAAIM,aAAa,CACbC,WAAY,WACRP,EAAIQ,KAAKC,mBAAmBd,IAAae,MAAMC,QAAShB,IAAae,MAAMC,YAGnFX,EAAIY,QACJC,OAAOC,iBAAiB,UAAU,WAC9Bd,EAAIe,kBAERZ,KAAKN,MAAMmB,SAAShB,K,oBAGxB,WACI,OACE,qBAAKiB,UAAU,yCAAyCC,GAAIf,KAAKL,e,GAzB7CqB,aCDxBC,G,wDACJ,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,WAAa,EAAK1B,MAAMG,IAAIwB,MAAMC,sBACvC,EAAKC,SAAW,GAJC,E,qDAOnB,WAAqB,IAAD,OAClB,IAAK,IAAMC,KAAUxB,KAAKuB,SACxBvB,KAAKuB,SAASC,GAAQC,WAAU,GAElCzB,KAAKN,MAAMG,IAAIM,aAAa,CAE1BuB,eAAgB,SAACC,GACf,IAAK,IAAMC,KAAO,EAAKL,SACrB,EAAKA,SAASK,GAAKH,WAAU,GAE/BE,EAAgBE,SAAQ,SAAAC,GACtB,IAAMN,EAASM,EAAeC,eAAeC,YAC7C,EAAKT,SAASC,GAAQC,WAAU,W,4BAMxC,SAAeD,EAAQS,GACrBjC,KAAKuB,SAASC,GAAUS,I,oBAG1B,WACE,OACE,sBAAKnB,UAAU,aAAf,UACE,qBAAKA,UAAU,WACf,cAAC,EAAD,CAAwBjB,IAAKG,KAAKN,MAAMG,IAAK2B,OAAQxB,KAAKoB,WAAYc,MAAO,EAAGhB,eAAgBlB,KAAKkB,wB,GAlC5EF,cA6C3BmB,E,kDACJ,WAAYzC,GAAQ,IAAD,EAYjB,OAZiB,qBACjB,cAAMA,IACD+B,UAAY,EAAKA,UAAUN,KAAf,gBACjB,EAAKiB,YAAc,EAAKA,YAAYjB,KAAjB,gBACnB,EAAKkB,cAAgB,EAAKA,cAAclB,KAAnB,gBACrB,EAAKmB,WAAa,GAClB,EAAKC,SAAW,GAChB,EAAKC,MAAQ,CACXC,YAAY,EACZC,aAAa,GAGP,EAAKhD,MAAMG,IAAIwB,MAAMsB,YAAY,EAAKjD,MAAM8B,SAClD,KAAKhC,IAAaoD,SAASC,KAC3B,KAAKrD,IAAaoD,SAASE,aAC3B,KAAKtD,IAAaoD,SAASG,aAC3B,KAAKvD,IAAaoD,SAASI,aACzB,EAAKT,SAAW,EAAK7C,MAAMG,IAAIwB,MAAM4B,YAAY,EAAKvD,MAAM8B,QAC5D,EAAKc,WAAa,EAAK5C,MAAMG,IAAIwB,MAAM6B,gBAAgB,EAAKxD,MAAM8B,QAClE,EAAK9B,MAAMwB,eAAe,EAAKxB,MAAM8B,OAArC,gBAnBa,S,6CA2BnB,SAAUiB,GACRzC,KAAKmD,SAAS,CACZV,WAAYA,M,yBAIhB,SAAYW,GACVpD,KAAKN,MAAMG,IAAIwD,WACZrD,KAAKwC,MAAMC,WAAiC,KAApBzC,KAAKN,MAAM8B,U,2BAIxC,SAAc4B,GACZpD,KAAKmD,SAAS,CACZT,aAAc1C,KAAKwC,MAAME,gB,oBAI7B,WAAU,IAAD,OACDY,EAAe,CACnBC,YAAgC,GAAnBvD,KAAKN,MAAMwC,MAAa,GACrCsB,cAAe,GAEXC,EAAgBzD,KAAKsC,WAAWoB,KAAI,SAAAC,GACxC,OAAO,cAACxB,EAAD,CACLtC,IAAK,EAAKH,MAAMG,IAChB2B,OAAQmC,EACRzB,MAAO,EAAKxC,MAAMwC,MAAQ,EAC1BhB,eAAgB,EAAKxB,MAAMwB,gBAJOyC,MAQhCC,GACH5D,KAAKsC,WAAWuB,OAAS,EAAI,SAAW,KACxC7D,KAAKwC,MAAME,YAAc,GAAK,cAC3BoB,EACJ9D,KAAKwC,MAAMC,WAAa,yBAA2B,GAC/CsB,EAAqC,KAAlB/D,KAAKuC,SAAkB,UAAY,UAC5D,OACE,eAAC,IAAMyB,SAAP,WACE,sBAAKlD,UAAW,+CAAiDgD,EAAiBC,EAAkBE,MAAOX,EAA3G,UACE,qBAAKxC,UAAW,QAAU8C,EAAYM,QAASlE,KAAKqC,gBACpD,qBAAKvB,UAAU,iDAAiDoD,QAASlE,KAAKoC,YAA9E,SAA4FpC,KAAKuC,cAEnG,qBAAKzB,UAAWd,KAAKwC,MAAME,YAAc,SAAW,GAApD,SAAyDe,W,GAxE5BzC,aA8EtBC,ICwBAkD,E,kDAhJb,WAAYzE,GAAQ,IAAD,8BACjB,cAAMA,IAEDmB,SAAW,EAAKA,SAASM,KAAd,gBAChB,EAAKiD,UAAY,EAAKA,UAAUjD,KAAf,gBACjB,EAAKkD,eAAiB,EAAKA,eAAelD,KAApB,gBAEtB,EAAKqB,MAAQ,CACX3C,IAAK,KACLyE,WAAY,EACZC,aAAc,KACdC,SAAU,QACVC,kBAAkB,GAZH,E,4CAiBnB,SAASC,GAAS,IAAD,OAEf1E,KAAKmD,SAAS,CACZtD,IAAK6E,IACJ,WACD,EAAKlC,MAAM3C,IAAIM,aAAa,CAC1BC,WAAY,WACV,EAAK+C,SAAS,CACZoB,aAAc,EAAK/B,MAAM3C,IAAIQ,KAAKsE,YAAYC,YAGlDC,oBAAqB,WACnB,EAAK1B,SAAS,CACZsB,kBAAkB,KAGtBK,OAAQ,WACN,EAAK3B,SAAS,CACZoB,aAAc,EAAK/B,MAAM3C,IAAIQ,KAAKsE,YAAYC,mB,4BAOxD,SAAexB,GAAQ,IAAD,OACpBpD,KAAKmD,SAAS,CACZqB,SAAUpB,EAAM2B,OAAOC,QACtB,WACI,EAAKxC,MAAM3C,MAChB,EAAK2C,MAAM3C,IAAIoF,gBAAgBC,QAC/B,EAAK1C,MAAM3C,IAAIoF,gBAAgBE,KAAK3F,IAAa4F,WAAWC,OAChC,gBAAxB,EAAK7C,MAAMgC,SACb,EAAKhC,MAAM3C,IAAIoF,gBAAgBE,KAAK3F,IAAa4F,WAAWE,YAC3B,WAAxB,EAAK9C,MAAMgC,SACpB,EAAKhC,MAAM3C,IAAIoF,gBAAgBE,KAAK3F,IAAa4F,WAAWG,QAC3B,YAAxB,EAAK/C,MAAMgC,UACpB,EAAKhC,MAAM3C,IAAIoF,gBAAgBE,KAAK3F,IAAa4F,WAAWI,iC,uBAKlE,SAAUC,GACRzF,KAAKmD,SAAS,CACZmB,WAAYmB,M,oBAIhB,WAAU,IAAD,OACDC,EAAU,SAACV,EAAOW,GACtB,OAAO,oBAAI7E,UAAU,WAAd,SACL,wBACEA,UAAW,aAAe,EAAK0B,MAAM8B,aAAeU,EAAQ,SAAW,IACvEd,QAAS,WAAQ,EAAKE,UAAUY,IAChCY,KAAK,SAHP,SAGiBD,OAEfE,EAAiD,MAA3B7F,KAAKwC,MAAM+B,aAAuB,4CAC5D,gCACE,oBAAGzD,UAAU,OAAb,UAAoB,gDAApB,IACId,KAAKwC,MAAM+B,aAAauB,SAASC,EAAEC,QAAQ,GAD/C,KACqDhG,KAAKwC,MAAM+B,aAAauB,SAASG,EAAED,QAAQ,GADhG,KACsGhG,KAAKwC,MAAM+B,aAAauB,SAASI,EAAEF,QAAQ,GADjJ,OAGA,oBAAGlF,UAAU,OAAb,UAAoB,8CAApB,IACId,KAAKwC,MAAM+B,aAAaQ,OAAOgB,EAAEC,QAAQ,GAD7C,KACmDhG,KAAKwC,MAAM+B,aAAaQ,OAAOkB,EAAED,QAAQ,GAD5F,KACkGhG,KAAKwC,MAAM+B,aAAaQ,OAAOmB,EAAEF,QAAQ,GAD3I,OAGA,oBAAGlF,UAAU,OAAb,UAAoB,0CAApB,IACId,KAAKwC,MAAM+B,aAAa4B,GAAGJ,EAAEC,QAAQ,GADzC,KAC+ChG,KAAKwC,MAAM+B,aAAa4B,GAAGF,EAAED,QAAQ,GADpF,KAC0FhG,KAAKwC,MAAM+B,aAAa4B,GAAGD,EAAEF,QAAQ,GAD/H,OAGA,oBAAGlF,UAAU,OAAb,UACE,6CADF,IAC4Bd,KAAKwC,MAAM+B,aAAa6B,MAAMJ,QAAQ,GADlE,QAEA,8CAFA,IAE2BhG,KAAKwC,MAAM+B,aAAa8B,OAAOL,QAAQ,MAElE,oBAAGlF,UAAU,OAAb,UACE,kDADF,IACiCd,KAAKwC,MAAM+B,aAAa+B,WAAWN,QAAQ,GAD5E,QAEA,iDAFA,IAE8BhG,KAAKwC,MAAM+B,aAAagC,UAAUP,QAAQ,MAExE,oBAAGlF,UAAU,OAAb,UAAoB,kDAApB,IAAmDd,KAAKwC,MAAM+B,aAAazD,gBAEzE0F,EAAiB,sBAAK1F,UAAW,uBAAmD,IAA1Bd,KAAKwC,MAAM8B,WAAmB,SAAW,IAAlF,UACrB,mEAEA,0CACA,yBAAQxD,UAAU,mBAAmBkE,MAAOhF,KAAKwC,MAAMgC,SAAUiC,SAAUzG,KAAKqE,eAAhF,UACE,wBAAQW,MAAM,QAAd,mBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,wBAGF,+CACCa,KAEGa,EAA2B,sBAAK5F,UAAW,uBAAmD,IAA1Bd,KAAKwC,MAAM8B,WAAmB,SAAW,IAAlF,UAC/B,iDAEEtE,KAAKwC,MAAMiC,iBACP,cAAC,EAAD,CAAoB5E,IAAKG,KAAKwC,MAAM3C,MACpC,gEAIR,OACE,sBAAKiB,UAAU,0BAAf,UACE,sBAAKA,UAAU,cAAcmD,MAAO,CAAEoC,OAAQ,SAA9C,UAEE,qBAAKvF,UAAU,2BAAf,SACE,cAAC,EAAD,CAAiBZ,SAAUyG,EAAa9F,SAAUb,KAAKa,aAGzD,sBAAKC,UAAU,gCAAgCmD,MAAO,CAAEoC,OAAQ,SAAhE,UAEE,qBAAKO,IAAKC,EAAM/F,UAAU,gBAAgBmD,MAAO,CAAE6C,UAAW,SAAWC,IAAI,qBAE7E,qBAAIjG,UAAU,oBAAd,UACG4E,EAAQ,EAAG,QACXA,EAAQ,EAAG,qBAGd,sBAAK5E,UAAU,kBAAf,UACG0F,EAAgBE,KAVrB,OANF,OADF,W,GAvHY1F,aCJlBgG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.63893fa0.chunk.js","sourcesContent":["module.exports = Communicator;","export default __webpack_public_path__ + \"static/media/aquo_bottle.68086bfb.scs\";","export default __webpack_public_path__ + \"static/media/ts3d_logo.e5dcf0a8.png\";","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Communicator from 'communicator';\n\n/// props\n/// modelUri: Uri to the model\n/// hwvReady(hwv): Function to call when hwv is ready\nclass ViewerComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.viewerId = uuidv4();\n    }\n\n    componentDidMount() {\n        const hwv = new Communicator.WebViewer({\n            containerId: this.viewerId,\n            endpointUri: this.props.modelUri,\n        });\n        hwv.setCallbacks({\n            sceneReady: () => {\n                hwv.view.setBackgroundColor(Communicator.Color.white(), Communicator.Color.white());\n            },\n        });\n        hwv.start();\n        window.addEventListener('resize', () => {\n            hwv.resizeCanvas();\n        });\n        this.props.hwvReady(hwv);\n    }\n\n    render() {\n        return (\n          <div className=\"bg-light w-100 h-100 position-relative\" id={this.viewerId}></div>\n        );\n    }\n}\n\nexport default ViewerComponent;","import React, { Component } from \"react\";\nimport Communicator from 'communicator';\nimport '../styles/caret.css';\n\n/// props\n/// hwv: The web viewer\nclass ModelTreeComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.updateItemList = this.updateItemList.bind(this);\n    this.rootNodeId = this.props.hwv.model.getAbsoluteRootNode();\n    this.itemList = {};  // A record of all the items in this tree\n  }\n\n  componentDidMount() {\n    for (const nodeId in this.itemList) {\n      this.itemList[nodeId].setSelect(false);\n    }\n    this.props.hwv.setCallbacks({\n      // Selection event from the web viewer\n      selectionArray: (selectionEvents) => {\n        for (const key in this.itemList) {\n          this.itemList[key].setSelect(false);\n        }\n        selectionEvents.forEach(selectionEvent => {\n          const nodeId = selectionEvent.getSelection().getNodeId();\n          this.itemList[nodeId].setSelect(true);\n        });\n      },\n    });\n  }\n\n  updateItemList(nodeId, treeItemComponent) {\n    this.itemList[nodeId] = treeItemComponent;\n  }\n\n  render() {\n    return (\n      <div className=\"list-group\">\n        <div className=\"d-none\"></div>\n        <ModelTreeItemComponent hwv={this.props.hwv} nodeId={this.rootNodeId} level={0} updateItemList={this.updateItemList}></ModelTreeItemComponent>\n      </div>\n    );\n  }\n}\n\n/// props\n/// hwv: The web viewer\n/// nodeId: ID of the model node\n/// level: Depth in the tree\n/// updateItemList: callback to update the record of items\nclass ModelTreeItemComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.setSelect = this.setSelect.bind(this);\n    this.selectClick = this.selectClick.bind(this);\n    this.collapseClick = this.collapseClick.bind(this);\n    this.childrenId = [];\n    this.nodeName = \"\";\n    this.state = {\n      isSelected: false,\n      isCollapsed: false,\n    };\n\n    switch (this.props.hwv.model.getNodeType(this.props.nodeId)) {\n      case Communicator.NodeType.Part:\n      case Communicator.NodeType.PartInstance:\n      case Communicator.NodeType.BodyInstance:\n      case Communicator.NodeType.AssemblyNode: {\n        this.nodeName = this.props.hwv.model.getNodeName(this.props.nodeId);\n        this.childrenId = this.props.hwv.model.getNodeChildren(this.props.nodeId);\n        this.props.updateItemList(this.props.nodeId, this);\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  setSelect(isSelected) {\n    this.setState({\n      isSelected: isSelected,\n    });\n  }\n\n  selectClick(event) {\n    this.props.hwv.selectPart(\n      !this.state.isSelected ? this.props.nodeId : null\n    );\n  }\n\n  collapseClick(event) {\n    this.setState({\n      isCollapsed: !this.state.isCollapsed,\n    });\n  }\n\n  render() {\n    const paddingStyle = {\n      paddingLeft: this.props.level * 20 + 10,\n      marginBottom: -1,\n    };\n    const childrenItems = this.childrenId.map(childId => {\n      return <ModelTreeItemComponent key={childId}\n        hwv={this.props.hwv}\n        nodeId={childId}\n        level={this.props.level + 1}\n        updateItemList={this.props.updateItemList}>\n      </ModelTreeItemComponent>;\n    });\n    // Styles\n    const caretClass =\n      (this.childrenId.length > 0 ? 'caret ' : '') +\n      (this.state.isCollapsed ? '' : 'caret-down');\n    const selectionClass = \n      this.state.isSelected ? 'bg-primary text-white ' : '';\n    const nameDisplayClass = this.nodeName === '' ? 'd-none ' : 'd-flex ';\n    return (\n      <React.Fragment>\n        <div className={'list-group-item list-group-item-action py-1 ' + selectionClass + nameDisplayClass} style={paddingStyle}>\n          <div className={'py-1 ' + caretClass} onClick={this.collapseClick}></div>\n          <div className=\"py-1 flex-fill cursor-pointer user-select-none\" onClick={this.selectClick}>{this.nodeName}</div>\n        </div>\n        <div className={this.state.isCollapsed ? 'd-none' : ''}>{childrenItems}</div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ModelTreeComponent;","import { Component } from 'react';\nimport './App.css';\nimport aquo_bottle from './assets/aquo_bottle.scs';\nimport logo from './assets/ts3d_logo.png';\nimport ViewerComponent from './components/viewer-component';\nimport Communicator from 'communicator';\nimport ModelTreeComponent from './components/model-tree-component';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // Functions\n    this.hwvReady = this.hwvReady.bind(this);\n    this.changeTab = this.changeTab.bind(this);\n    this.changeOperator = this.changeOperator.bind(this);\n    // State\n    this.state = {\n      hwv: null,\n      currentTab: 1, // 1: Home, 2: ModelTree\n      cameraStatus: null,\n      operator: 'Orbit',\n      isStructureReady: false,\n    };\n  }\n\n  // Callback when the new hwv is ready\n  hwvReady(newHWV) {\n\n    this.setState({\n      hwv: newHWV,\n    }, () => {\n      this.state.hwv.setCallbacks({\n        sceneReady: () => {\n          this.setState({\n            cameraStatus: this.state.hwv.view.getCamera().toJson(),\n          });\n        },\n        modelStructureReady: () => {\n          this.setState({\n            isStructureReady: true,\n          });\n        },\n        camera: () => {\n          this.setState({\n            cameraStatus: this.state.hwv.view.getCamera().toJson(),\n          });\n        }\n      });\n    });\n  }\n\n  changeOperator(event) {\n    this.setState({\n      operator: event.target.value,\n    }, () => {\n      if (!this.state.hwv) return;\n      this.state.hwv.operatorManager.clear();\n      this.state.hwv.operatorManager.push(Communicator.OperatorId.Orbit);\n      if (this.state.operator === \"Area Select\") {\n        this.state.hwv.operatorManager.push(Communicator.OperatorId.AreaSelect);\n      } else if (this.state.operator === \"Select\") {\n        this.state.hwv.operatorManager.push(Communicator.OperatorId.Select);\n      } else if (this.state.operator === \"Measure\") {\n        this.state.hwv.operatorManager.push(Communicator.OperatorId.MeasurePointPointDistance);\n      }\n    });\n  }\n\n  changeTab(newTab) {\n    this.setState({\n      currentTab: newTab,\n    });\n  }\n\n  render() {\n    const navItem = (value, content) => {\n      return <li className=\"nav-item\">\n        <button\n          className={'nav-link ' + (this.state.currentTab === value ? 'active' : '')}\n          onClick={() => { this.changeTab(value) }}\n          type=\"button\">{content}</button></li>;\n    };\n    const cameraStatusContent = this.state.cameraStatus == null ? <p>Unavailable</p> :\n      <div>\n        <p className=\"mb-0\"><strong>Position: </strong>\n          ({this.state.cameraStatus.position.x.toFixed(2)}, {this.state.cameraStatus.position.y.toFixed(2)}, {this.state.cameraStatus.position.z.toFixed(2)})\n        </p>\n        <p className=\"mb-0\"><strong>Target: </strong>\n          ({this.state.cameraStatus.target.x.toFixed(2)}, {this.state.cameraStatus.target.y.toFixed(2)}, {this.state.cameraStatus.target.z.toFixed(2)})\n        </p>\n        <p className=\"mb-0\"><strong>Up: </strong>\n          ({this.state.cameraStatus.up.x.toFixed(2)}, {this.state.cameraStatus.up.y.toFixed(2)}, {this.state.cameraStatus.up.z.toFixed(2)})\n        </p>\n        <p className=\"mb-0\">\n          <strong>Width: </strong> {this.state.cameraStatus.width.toFixed(2)} &nbsp;\n        <strong>Height: </strong> {this.state.cameraStatus.height.toFixed(2)}\n        </p>\n        <p className=\"mb-0\">\n          <strong>Projection: </strong> {this.state.cameraStatus.projection.toFixed(2)} &nbsp;\n        <strong>NearLimit: </strong> {this.state.cameraStatus.nearLimit.toFixed(2)}\n        </p>\n        <p className=\"mb-0\"><strong>Class Name: </strong> {this.state.cameraStatus.className}</p>\n      </div>;\n    const homeTabContent = <div className={'tab-pane fade show ' + (this.state.currentTab === 1 ? 'active' : '')}>\n      <h2>React Demo for Hoops Web Platform</h2>\n      {/* Operator Selection */}\n      <h5>Operator</h5>\n      <select className=\"form-select mb-3\" value={this.state.operator} onChange={this.changeOperator}>\n        <option value=\"Orbit\">Orbit</option>\n        <option value=\"Area Select\">Area Select</option>\n        <option value=\"Select\">Select</option>\n        <option value=\"Measure\">Measure</option>\n      </select>\n      {/* Camera Status */}\n      <h5>Camera Status</h5>\n      {cameraStatusContent}\n    </div>;\n    const modelStructureTabContent = <div className={'tab-pane fade show ' + (this.state.currentTab === 2 ? 'active' : '')}>\n      <h5>Model Structure</h5>\n      {\n        this.state.isStructureReady\n          ? <ModelTreeComponent hwv={this.state.hwv}></ModelTreeComponent>\n          : <p>Model structure is not ready</p>\n      }\n    </div>;\n\n    return (\n      <div className=\"container-fluid p-0 m-0\">\n        <div className=\"row p-0 m-0\" style={{ height: \"100vh\" }}>\n          {/* HWP WebViewer with Custom Component */}\n          <div className=\"col-6 p-0 m-0 border-end\">\n            <ViewerComponent modelUri={aquo_bottle} hwvReady={this.hwvReady}></ViewerComponent>\n          </div>\n          {/* Control panel on the right side */}\n          <div className=\"col-6 p-0 m-0 overflow-scroll\" style={{ height: \"100vh\" }}>\n            {/* Logo */}\n            <img src={logo} className=\"img-fluid m-3\" style={{ maxHeight: \"100px\" }} alt=\"TechSoft 3D LOGO\"></img>\n            {/* NavBar */}\n            <ul className=\"nav nav-tabs px-3\">\n              {navItem(1, \"Home\")}\n              {navItem(2, \"ModelStructure\")}\n            </ul>\n            {/* Tab Contents */}\n            <div className=\"tab-content p-3\">\n              {homeTabContent}{modelStructureTabContent}\n            </div > {/* Tab Contents End */}\n          </div > {/* Right Panel End */}\n        </div > {/* Row End */}\n      </div >\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}